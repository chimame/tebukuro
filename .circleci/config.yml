version: 2
jobs:
  deploy:
    docker:
      - image: google/cloud-sdk:alpine
    working_directory: ~/tebukuro
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/tebukuro.tar
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip gettext
            pip install docker-compose==1.18.0
            gcloud components install kubectl
      - run:
          name: Install Docker client
          command: |
            apk update
            apk add docker
      - run:
          name: Check docker version
          command: |
            docker version
      - run:
          name: Build application Docker image
          command: |
            docker-compose build --build-arg BUNDLE_OPTIONS='--without development test' backend
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker images
            docker save -o /caches/tebukuro.tar tebukuro_backend:latest
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/tebukuro.tar
      - run:
          name: Deploy application Docker image
          command: |
            echo $ACCT_AUTH | base64 -d > ${HOME}/account-auth.json
            export TEBUKURO_IMAGE=us.gcr.io/${PROJECT_NAME}/tebukuro_backend:$CIRCLE_SHA1
            docker tag tebukuro_backend $TEBUKURO_IMAGE
            gcloud auth activate-service-account --key-file ${HOME}/account-auth.json
            gcloud config set project $PROJECT_NAME
            gcloud --quiet config set container/cluster $CLUSTER_NAME
            gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials $CLUSTER_NAME
            gcloud config set container/use_client_certificate True
            gcloud docker -- push $TEBUKURO_IMAGE
            ./script/deploy.sh
workflows:
  version: 2
  build-deploy:
    jobs:
      - deploy:
          filters: # Deploy only the master branch
            branches:
              only: add_deploy_to_gke
